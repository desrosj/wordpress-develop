name: Code Coverage Report

on:
  # Verify
  push:
    branches:
      - test-coverage-error
  # Once daily at 00:00 UTC.
  schedule:
    - cron: '0 0 * * *'
  # Allow manually triggering the workflow.
  workflow_dispatch:

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
  LOCAL_PHP: '7.4-fpm'
  LOCAL_PHP_XDEBUG: true
  LOCAL_PHP_MEMCACHED: ${{ false }}

jobs:
  # Sets up WordPress for testing or development use.
  #
  # Performs the following steps:
  # - Set environment variables.
  # - Checks out the repository.
  # - Checks out the WordPress Importer plugin (needed for the Core PHPUnit tests).
  # - Logs debug information about the runner container.
  # - Installs NodeJS 14.
  # _ Installs NPM dependencies using install-changed to hash the `package.json` file.
  # - Logs Docker debug information (about the Docker installation within the runner).
  # - Starts the WordPress Docker container.
  # - Logs debug general information.
  # - Logs the running Docker containers.
  # - Logs WordPress Docker container debug information.
  # - Logs debug information about what's installed within the WordPress Docker containers.
  # - Install WordPress within the Docker container.
  # - Run the PHPUnit tests as a single site.
  # - Ensures version-controlled files are not modified or deleted.
  # - Upload the single site code coverage report to Codecov.io.
  # - Run the PHPUnit tests as a multisite.
  # - Ensures version-controlled files are not modified or deleted.
  # - Upload the multisite code coverage report to Codecov.io.
  test-coverage-report:
    name: ${{ matrix.multisite && 'Multisite' || 'Single site' }} report
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        multisite: [ false, true ]

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

  slack-notifications:
    name: Slack Notifications
    uses: desrosj/wordpress-develop/.github/workflows/slack-notifications.yml@test-coverage-error
    needs: [ test-coverage-report ]
    if: ${{ always() }}
    with:
      calling_status: ${{ needs.test-coverage-report.result == 'success' && 'success' || needs.test-coverage-report.result == 'cancelled' && 'cancelled' || 'failure' }}
    secrets:
      SLACK_GHA_SUCCESS_WEBHOOK: ${{ secrets.SLACK_GHA_SUCCESS_WEBHOOK }}
      SLACK_GHA_CANCELLED_WEBHOOK: ${{ secrets.SLACK_GHA_CANCELLED_WEBHOOK }}
      SLACK_GHA_FIXED_WEBHOOK: ${{ secrets.SLACK_GHA_FIXED_WEBHOOK }}
      SLACK_GHA_FAILURE_WEBHOOK: ${{ secrets.SLACK_GHA_FAILURE_WEBHOOK }}
