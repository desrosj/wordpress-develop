name: PHPUnit Tests

on:
  push:
    branches:
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
    tags:
      - '[0-9]+.[0-9]'
      - '[0-9]+.[0-9].[0-9]+'
  pull_request:
    branches:
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
  workflow_dispatch:
  # Once weekly On Sundays at 00:00 UTC.
  schedule:
    - cron: '0 0 * * 0'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
  LOCAL_PHP_MEMCACHED: ${{ false }}
  SLOW_TESTS: 'external-http,media,restapi'

jobs:
  # Runs the PHPUnit tests for WordPress.
  #
  # Performs the following steps:
  # - Sets environment variables.
  # - Checks out the repository.
  # - Sets up Node.js.
  # - Sets up PHP.
  # - Installs Composer dependencies.
  # - Installs npm dependencies
  # - Logs general debug information about the runner.
  # - Logs Docker debug information (about the Docker installation within the runner).
  # - Starts the WordPress Docker container.
  # - Logs the running Docker containers.
  # - Logs debug information about what's installed within the WordPress Docker containers.
  # - Install WordPress within the Docker container.
  # - Run the PHPUnit tests.
  # - Ensures version-controlled files are not modified or deleted.
  # - Checks out the WordPress Test reporter repository.
  # - Submit the test results to the WordPress.org host test results.
  test-with-mysql:
    name: PHP ${{ matrix.php }}/${{ matrix.db-type }} ${{ matrix.db-version }}${{ matrix.multisite && ' multisite' || '' }}${{ matrix.split_slow && ' slow tests' || '' }}${{ matrix.memcached && ' with memcached' || '' }}
    uses: desrosj/wordpress-develop/.github/workflows/run-phpunit-tests.yml@expanded-db-testing/callable-action
    if: ${{ github.repository == 'WordPress/wordpress-develop' || github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2' ]
        db-type: [ 'mysql' ]
        db-version: [ '5.6', '8.0' ]
        multisite: [ false, true ]
        memcached: [ false ]
        split_slow: [ false ]
        report: [ false ]
    with:
      os: ${{ matrix.os }}
      php: ${{ matrix.php }}
      db-type: ${{ matrix.db-type }}
      db-version: ${{ matrix.db-version }}
      multisite: ${{ matrix.multisite }}
      memcached: ${{ matrix.memcached }}
      split-slow: ${{ matrix.split_slow }}
      phpunit-config: ${{ matrix.multisite && 'tests/phpunit/multisite.xml' || 'phpunit.xml.dist' }}
      report: ${{ matrix.report }}

  test-with-mariadb:
    name: PHP ${{ matrix.php }}/${{ matrix.db-type }} ${{ matrix.db-version }}${{ matrix.multisite && ' multisite' || '' }}${{ matrix.split_slow && ' slow tests' || '' }}${{ matrix.memcached && ' with memcached' || '' }}
    uses: desrosj/wordpress-develop/.github/workflows/run-phpunit-tests.yml@expanded-db-testing/callable-action
    if: ${{ github.repository == 'WordPress/wordpress-develop' || github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2' ]
        db-type: [ 'mariadb' ]
        db-version: [ '10.9', '10.6' ]
        multisite: [ false, true ]
        memcached: [ false ]
        split_slow: [ false ]
        report: [ false ]
    with:
      os: ${{ matrix.os }}
      php: ${{ matrix.php }}
      db-type: ${{ matrix.db-type }}
      db-version: ${{ matrix.db-version }}
      multisite: ${{ matrix.multisite }}
      memcached: ${{ matrix.memcached }}
      split-slow: ${{ matrix.split_slow }}
      phpunit-config: ${{ matrix.multisite && 'tests/phpunit/multisite.xml' || 'phpunit.xml.dist' }}
      report: ${{ matrix.report }}

  slack-notifications:
    name: Slack Notifications
    uses: WordPress/wordpress-develop/.github/workflows/slack-notifications.yml@trunk
    needs: [ test-with-mysql, test-with-mariadb ]
    if: ${{ github.repository == 'WordPress/wordpress-develop' && github.event_name != 'pull_request' && always() }}
    with:
      calling_status: ${{ needs.test-with-mysql.result == 'success' && needs.test-with-mariadb.result == 'success' && 'success' || ( needs.test-with-mysql.result == 'cancelled' || needs.test-with-mariadb.result == 'cancelled' ) && 'cancelled' || 'failure' }}
    secrets:
      SLACK_GHA_SUCCESS_WEBHOOK: ${{ secrets.SLACK_GHA_SUCCESS_WEBHOOK }}
      SLACK_GHA_CANCELLED_WEBHOOK: ${{ secrets.SLACK_GHA_CANCELLED_WEBHOOK }}
      SLACK_GHA_FIXED_WEBHOOK: ${{ secrets.SLACK_GHA_FIXED_WEBHOOK }}
      SLACK_GHA_FAILURE_WEBHOOK: ${{ secrets.SLACK_GHA_FAILURE_WEBHOOK }}

  failed-workflow:
    name: Failed workflow tasks
    runs-on: ubuntu-latest
    needs: [ test-with-mysql, test-with-mariadb, slack-notifications ]
    if: |
      always() &&
      github.repository == 'WordPress/wordpress-develop' &&
      github.event_name != 'pull_request' &&
      github.run_attempt < 2 &&
      (
        needs.test-with-mysql.result == 'cancelled' || needs.test-with-mysql.result == 'failure' ||
        needs.test-with-mariadb.result == 'cancelled' || needs.test-with-mariadb.result == 'failure'
      )

    steps:
      - name: Dispatch workflow run
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
        with:
          retries: 2
          retry-exempt-status-codes: 418
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'failed-workflow.yml',
              ref: 'trunk',
              inputs: {
                run_id: '${{ github.run_id }}'
              }
            });
