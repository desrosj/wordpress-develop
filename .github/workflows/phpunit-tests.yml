name: PHPUnit Tests

on:
  push:
    branches:
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
    tags:
      - '[0-9]+.[0-9]'
      - '[0-9]+.[0-9].[0-9]+'
  pull_request:
    branches:
      - trunk
      - '3.[7-9]'
      - '[4-9].[0-9]'
  workflow_dispatch:
  # Once weekly On Sundays at 00:00 UTC.
  schedule:
    - cron: '0 0 * * 0'

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

# Disable permissions for all available scopes by default.
# Any needed permissions should be configured at the job level.
permissions: {}

jobs:
  # Creates PHPUnit test jobs.
  test-php:
    name: PHP ${{ matrix.php }}
    uses: WordPress/wordpress-develop/.github/workflows/reusable-phpunit-tests-v2.yml@trunk
    permissions:
      contents: read
    secrets: inherit
    if: ${{ github.repository == 'WordPress/wordpress-develop' || github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0' ]
        multisite: [ false, true ]
        split_slow: [ false ]
        memcached: [ false ]

        include:
          # Additional "slow" jobs for PHP 5.6.
          - php: '5.6'
            os: ubuntu-latest
            memcached: false
            multisite: false
            split_slow: true
          - php: '5.6'
            os: ubuntu-latest
            memcached: false
            multisite: true
            split_slow: true
          # Include jobs for PHP 7.4 with memcached.
          - php: '7.4'
            os: ubuntu-latest
            memcached: true
            multisite: false
          - php: '7.4'
            os: ubuntu-latest
            memcached: true
            multisite: true
          # Report the results of the PHP 7.4 without memcached job.
          - php: '7.4'
            os: ubuntu-latest
            memcached: false
            multisite: false
            report: true
    with:
      os: ${{ matrix.os }}
      php: ${{ matrix.php }}
      multisite: ${{ matrix.multisite }}
      split_slow: ${{ matrix.split_slow }}
      memcached: ${{ matrix.memcached }}
      phpunit-config: ${{ matrix.multisite && 'tests/phpunit/multisite.xml' || 'phpunit.xml.dist' }}
      report: ${{ matrix.report || false }}

  slack-notifications:
    name: Slack Notifications
    uses: WordPress/wordpress-develop/.github/workflows/slack-notifications.yml@trunk
    permissions:
      actions: read
      contents: read
    needs: [ test-php ]
    if: ${{ github.repository == 'WordPress/wordpress-develop' && github.event_name != 'pull_request' && always() }}
    with:
      calling_status: ${{ contains( needs.*.result, 'cancelled' ) && 'cancelled' || contains( needs.*.result, 'failure' ) && 'failure' || 'success' }}
    secrets:
      SLACK_GHA_SUCCESS_WEBHOOK: ${{ secrets.SLACK_GHA_SUCCESS_WEBHOOK }}
      SLACK_GHA_CANCELLED_WEBHOOK: ${{ secrets.SLACK_GHA_CANCELLED_WEBHOOK }}
      SLACK_GHA_FIXED_WEBHOOK: ${{ secrets.SLACK_GHA_FIXED_WEBHOOK }}
      SLACK_GHA_FAILURE_WEBHOOK: ${{ secrets.SLACK_GHA_FAILURE_WEBHOOK }}

  failed-workflow:
    name: Failed workflow tasks
    runs-on: ubuntu-latest
    permissions:
      actions: write
    needs: [ slack-notifications ]
    if: |
      always() &&
      github.repository == 'WordPress/wordpress-develop' &&
      github.event_name != 'pull_request' &&
      github.run_attempt < 2 &&
      (
        contains( needs.*.result, 'cancelled' ) ||
        contains( needs.*.result, 'failure' )
      )

    steps:
      - name: Dispatch workflow run
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          retries: 2
          retry-exempt-status-codes: 418
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'failed-workflow.yml',
              ref: 'trunk',
              inputs: {
                run_id: '${{ github.run_id }}'
              }
            });
